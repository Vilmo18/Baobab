"""Add SectionTranslation and QuestionTranslation tables

Revision ID: 3fb92272089d
Revises: 40ee6f91f6f3
Create Date: 2020-08-11 19:11:52.701858

"""

# revision identifiers, used by Alembic.
revision = '3fb92272089d'
down_revision = '40ee6f91f6f3'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('section_translation',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('section_id', sa.Integer(), nullable=False),
        sa.Column('language', sa.String(length=2), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.String(), nullable=False),
        sa.Column('show_for_values', sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(['section_id'], ['section.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('section_id', 'language', name='uq_section_id_language')
    )

    op.execute("""
        INSERT INTO section_translation (
            section_id,
            language,
            name,
            description,
            show_for_values
        ) 
        SELECT
            id,
            'en',
            name,
            description,
            show_for_values
        FROM section
    """)

    op.drop_column(u'section', 'name')
    op.drop_column(u'section', 'description')
    op.drop_column(u'section', 'show_for_values')

    op.create_table('question_translation',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('question_id', sa.Integer(), nullable=False),
        sa.Column('language', sa.String(length=2), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('headline', sa.String(), nullable=False),
        sa.Column('placeholder', sa.String(), nullable=True),
        sa.Column('validation_regex', sa.String(), nullable=True),
        sa.Column('validation_text', sa.String(), nullable=True),
        sa.Column('options', sa.JSON(), nullable=True),
        sa.Column('show_for_values', sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('question_id', 'language', name='uq_question_id_language')
    )

    op.execute("""
        INSERT INTO question_translation (
            question_id,
            language,
            description,
            headline,
            placeholder,
            validation_regex,
            validation_text,
            options,
            show_for_values)
        SELECT
            id,
            'en',
            description,
            headline,
            placeholder,
            validation_regex,
            validation_text,
            options,
            show_for_values
        FROM question
    """)

    op.drop_column(u'question', 'description')
    op.drop_column(u'question', 'headline')
    op.drop_column(u'question', 'placeholder')
    op.drop_column(u'question', 'validation_regex')
    op.drop_column(u'question', 'validation_text')
    op.drop_column(u'question', 'options')
    op.drop_column(u'question', 'show_for_values')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(u'section', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(u'section', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(u'section', sa.Column('show_for_values', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))

    op.execute("""
        UPDATE section
            SET
                name = (SELECT name from section_translation where section.id = section_translation.section_id AND section_translation.language = 'en'),
                description = (SELECT description from section_translation where section.id = section_translation.section_id AND section_translation.language = 'en'),
                show_for_values = (SELECT show_for_values from section_translation where section.id = section_translation.section_id AND section_translation.language = 'en')
    """)

    op.alter_column('section', 'name', nullable=False)
    op.alter_column('section', 'description', nullable=False)

    op.drop_table('section_translation')

    op.add_column(u'question', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(u'question', sa.Column('headline', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(u'question', sa.Column('placeholder', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(u'question', sa.Column('validation_regex', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(u'question', sa.Column('validation_text', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column(u'question', sa.Column('options', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column(u'question', sa.Column('show_for_values', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))

    op.execute("""
        UPDATE question
            SET
                description = (SELECT description from question_translation where question.id = question_translation.question_id AND question_translation.language = 'en'),
                headline = (SELECT headline from question_translation where question.id = question_translation.question_id AND question_translation.language = 'en'),
                placeholder = (SELECT placeholder from question_translation where question.id = question_translation.question_id AND question_translation.language = 'en'),
                validation_regex = (SELECT validation_regex from question_translation where question.id = question_translation.question_id AND question_translation.language = 'en'),
                validation_text = (SELECT validation_text from question_translation where question.id = question_translation.question_id AND question_translation.language = 'en'),
                options = (SELECT options from question_translation where question.id = question_translation.question_id AND question_translation.language = 'en'),
                show_for_values = (SELECT show_for_values from question_translation where question.id = question_translation.question_id AND question_translation.language = 'en')
    """)

    op.alter_column('question', 'headline', nullable=False)

    op.drop_table('question_translation')
    # ### end Alembic commands ###
